;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.10 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 11.11.2017
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega328P
;Program type            : Application
;AVR Core Clock frequency: 16,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega328p.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;
;struct RGB_COLOR_TYPE
;{
;    unsigned char R;
;    unsigned char G;
;    unsigned char B;
;};
;
;
;struct RGB_COLOR_TYPE Red = {255, 0, 0};

	.DSEG
;struct RGB_COLOR_TYPE Orange = {252, 179, 0};
;struct RGB_COLOR_TYPE Yellow = {252, 255, 0};
;struct RGB_COLOR_TYPE Green = {0, 255, 0};
;struct RGB_COLOR_TYPE Blue = {0, 226, 251};
;struct RGB_COLOR_TYPE NavyBlue = {0, 0, 255};
;struct RGB_COLOR_TYPE Violet = {200, 0, 255};
;struct RGB_COLOR_TYPE White = {255, 255, 255};
;struct RGB_COLOR_TYPE Black = {0, 0, 0};
;
;#define RED_CH              OCR0B //Определяем канал OCR1AL для Красного цвета
;#define GREEN_CH            OCR0A //Определяем канал OCR1BL для Зеленого цвета
;#define BLUE_CH             OCR1AL   //Определяем канал OCR2 для Синего цвета
;
;#define  BRIGHTNESS_100     255
;#define  BRIGHTNESS_75      192
;#define  BRIGHTNESS_50      127
;#define  BRIGHTNESS_25      64
;#define  BRIGHTNESS_10      32
;#define  BRIGHTNESS_5       16
;#define  BRIGHTNESS_0       0
;
;#define RED_DDR   DDD5
;#define GREEN_DDR DDD6
;#define BLUE_DDR  DDB1
;
;void set_color(struct RGB_COLOR_TYPE color, unsigned char brightness)
; 0000 003F {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0040 /*Яркость (Brightness)
; 0000 0041 
; 0000 0042 — самое простое преобразование.
; 0000 0043 При:
; 0000 0044 Shift=0 светодиод погашен
; 0000 0045 Shift=255 светодиод горит базовым цветом.
; 0000 0046 Все промежуточные значения Shift – это затемнение базового цвета.
; 0000 0047 
; 0000 0048 R_shift = (R_base * Shift) / 256
; 0000 0049 G_shift = (G_base * Shift) / 256
; 0000 004A B_shift = (B_base * Shift) / 256
; 0000 004B 
; 0000 004C */
; 0000 004D if (brightness==BRIGHTNESS_100)
;PCODE: $0000000F VOL: 0
;	color -> Y+1
;	brightness -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 004E  {
; 0000 004F    RED_CH = color.R;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0050    GREEN_CH = color.G;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0051    BLUE_CH = color.B;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0052 }
; 0000 0053   else
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0054     {
; 0000 0055      RED_CH = (color.R*brightness)/256;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0056      GREEN_CH = (color.G*brightness)/256;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0057      BLUE_CH = (color.B*brightness)/256;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0058     }
;PCODE: $00000036 VOL: 0
; 0000 0059 
; 0000 005A }
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;
;
;
;
;
;//Программа инициализации ШИМ
;void init_pwm (void)
; 0000 0062 {
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0063 // Input/Output Ports initialization
; 0000 0064 // Port B initialization
; 0000 0065 DDRB=(1<<DDB5) | (1<<BLUE_DDR);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0066 DDRD=(1<<GREEN_DDR) | (1<<RED_DDR);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0067 
; 0000 0068 
; 0000 0069 // Timer/Counter 0 initialization
; 0000 006A // Clock source: System Clock
; 0000 006B // Clock value: 16000,000 kHz
; 0000 006C // Mode: Phase correct PWM top=0xFF
; 0000 006D // OC0A output: Non-Inverted PWM
; 0000 006E // OC0B output: Non-Inverted PWM
; 0000 006F // Timer Period: 0,031875 ms
; 0000 0070 // Output Pulse(s):
; 0000 0071 // OC0A Period: 0,031875 ms Width: 0 us
; 0000 0072 // OC0B Period: 0,031875 ms Width: 0 us
; 0000 0073 TCCR0A=(1<<COM0A1) | (0<<COM0A0) | (1<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (1<<WGM00);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0074 TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (1<<CS00);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0075 TCNT0=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0076 
; 0000 0077 GREEN_CH=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0078 RED_CH=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0079 
; 0000 007A // Timer/Counter 1 initialization
; 0000 007B // Clock source: System Clock
; 0000 007C // Clock value: 16000,000 kHz
; 0000 007D // Mode: Ph. correct PWM top=0x00FF
; 0000 007E // OC1A output: Non-Inverted PWM
; 0000 007F // OC1B output: Disconnected
; 0000 0080 // Noise Canceler: Off
; 0000 0081 // Input Capture on Falling Edge
; 0000 0082 // Timer Period: 0,031875 ms
; 0000 0083 // Output Pulse(s):
; 0000 0084 // OC1A Period: 0,031875 ms Width: 0 us
; 0000 0085 // Timer1 Overflow Interrupt: Off
; 0000 0086 // Input Capture Interrupt: Off
; 0000 0087 // Compare A Match Interrupt: Off
; 0000 0088 // Compare B Match Interrupt: Off
; 0000 0089 TCCR1A=(1<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (1<<WGM10);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 008A TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 008B TCNT1H=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 008C TCNT1L=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 008D ICR1H=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 008E ICR1L=0x00;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 008F 
; 0000 0090 OCR1AH=0x00;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0091 
; 0000 0092 BLUE_CH=0x00;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0093 
; 0000 0094 OCR1BH=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0095 OCR1BL=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0096 
; 0000 0097 // Timer/Counter 0 Interrupt(s) initialization
; 0000 0098 TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (0<<TOIE0);
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0099 
; 0000 009A // Timer/Counter 1 Interrupt(s) initialization
; 0000 009B TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 009C }
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;
;void main(void)
; 0000 009F {
;PCODE: $00000064 VOL: 0
; 0000 00A0 // Declare your local variables here
; 0000 00A1 unsigned char shift;
; 0000 00A2 
; 0000 00A3 // Crystal Oscillator division factor: 1
; 0000 00A4 #pragma optsize-
; 0000 00A5 CLKPR=(1<<CLKPCE);
;	shift -> R17
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 00A6 CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 00A7 #ifdef _OPTIMIZE_SIZE_
; 0000 00A8 #pragma optsize+
; 0000 00A9 #endif
; 0000 00AA 
; 0000 00AB init_pwm ();
;PCODE: $00000069 VOL: 0
; 0000 00AC 
; 0000 00AD while (1)
;PCODE: $0000006A VOL: 0
; 0000 00AE       {
; 0000 00AF 
; 0000 00B0         PORTB.5=1;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 00B1         delay_ms(500);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 00B2         PORTB.5=0;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 00B3         delay_ms(500);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 00B4 
; 0000 00B5         set_color(Green,BRIGHTNESS_100);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 00B6         delay_ms(1500);
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 00B7         set_color(Green,BRIGHTNESS_75);
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 00B8         delay_ms(1500);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 00B9         set_color(Green,BRIGHTNESS_50);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 00BA         delay_ms(1500);
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 00BB         set_color(Green,BRIGHTNESS_25);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 00BC         delay_ms(1500);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 00BD         set_color(Green,BRIGHTNESS_10);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 00BE         delay_ms(1500);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 00BF         set_color(Green,BRIGHTNESS_5);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 00C0         delay_ms(1500);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 00C1         set_color(Green,BRIGHTNESS_0);
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 00C2         delay_ms(1500);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 00C3         set_color(Orange,BRIGHTNESS_100);
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 00C4         delay_ms(1500);
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 00C5         set_color(Orange,BRIGHTNESS_75);
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 00C6         delay_ms(1500);
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 00C7         set_color(Orange,BRIGHTNESS_50);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 00C8         delay_ms(1500);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 00C9         set_color(Orange,BRIGHTNESS_25);
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 00CA         delay_ms(1500);
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 00CB         set_color(Orange,BRIGHTNESS_10);
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 00CC         delay_ms(1500);
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 00CD         set_color(Orange,BRIGHTNESS_5);
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 00CE         delay_ms(1500);
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 00CF         set_color(Orange,BRIGHTNESS_0);
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 00D0         delay_ms(1500);
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 00D1 
; 0000 00D2        }
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 00D3 
; 0000 00D4 
; 0000 00D5 }
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;
